[{"/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/reportWebVitals.js":"1","/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/components/Shipments/Shipments.js":"2","/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/redux/index.js":"3","/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/components/Sidebar/SidebarData.js":"4","/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/components/Driver/DriversList.js":"5","/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/redux/actions/region.js":"6","/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/redux/actions/shipment.js":"7","/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/redux/reducers/time.js":"8","/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/redux/reducers/shipment.js":"9","/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/redux/actions/actionTypes.js":"10","/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/index.js":"11","/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/components/HomePage/Home.js":"12","/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/components/Journey/JourneyList.js":"13","/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/redux/actions/journey.js":"14","/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/redux/reducers/driver.js":"15","/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/redux/actions/auth.js":"16","/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/components/Journey/JourneyCreate.js":"17","/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/components/Journey/JourneyMapCreate.js":"18","/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/components/Shipments/ShipmentsMap.js":"19","/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/components/Authentication/Login.js":"20","/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/redux/reducers/index.js":"21","/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/redux/reducers/user.js":"22","/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/redux/actions/driver.js":"23","/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/redux/actions/instance.js":"24","/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/components/Sidebar/Navbar.js":"25","/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/components/Driver/DriverModal.js":"26","/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/redux/actions/status.js":"27","/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/redux/reducers/journey.js":"28","/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/components/Journey/CardsSection.js":"29","/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/redux/reducers/region.js":"30"},{"size":362,"mtime":1606901944000,"results":"31","hashOfConfig":"32"},{"size":14761,"mtime":1606901944000,"results":"33","hashOfConfig":"32"},{"size":621,"mtime":1606901944000,"results":"34","hashOfConfig":"32"},{"size":466,"mtime":1606901944000,"results":"35","hashOfConfig":"32"},{"size":901,"mtime":1606901944000,"results":"36","hashOfConfig":"32"},{"size":383,"mtime":1606901944000,"results":"37","hashOfConfig":"32"},{"size":758,"mtime":1606901944000,"results":"38","hashOfConfig":"32"},{"size":296,"mtime":1606901944000,"results":"39","hashOfConfig":"32"},{"size":713,"mtime":1606901944000,"results":"40","hashOfConfig":"32"},{"size":499,"mtime":1606901944000,"results":"41","hashOfConfig":"32"},{"size":933,"mtime":1606901944000,"results":"42","hashOfConfig":"32"},{"size":308,"mtime":1606901944000,"results":"43","hashOfConfig":"32"},{"size":12057,"mtime":1606961553000,"results":"44","hashOfConfig":"32"},{"size":1106,"mtime":1606901944000,"results":"45","hashOfConfig":"32"},{"size":758,"mtime":1606901944000,"results":"46","hashOfConfig":"32"},{"size":1364,"mtime":1606901944000,"results":"47","hashOfConfig":"32"},{"size":6020,"mtime":1606974838000,"results":"48","hashOfConfig":"32"},{"size":4654,"mtime":1606969940000,"results":"49","hashOfConfig":"32"},{"size":1520,"mtime":1606901944000,"results":"50","hashOfConfig":"32"},{"size":1950,"mtime":1606901944000,"results":"51","hashOfConfig":"32"},{"size":564,"mtime":1606901944000,"results":"52","hashOfConfig":"32"},{"size":310,"mtime":1606901944000,"results":"53","hashOfConfig":"32"},{"size":385,"mtime":1606901944000,"results":"54","hashOfConfig":"32"},{"size":128,"mtime":1606901944000,"results":"55","hashOfConfig":"32"},{"size":3037,"mtime":1606901944000,"results":"56","hashOfConfig":"32"},{"size":2733,"mtime":1606901944000,"results":"57","hashOfConfig":"32"},{"size":388,"mtime":1606901944000,"results":"58","hashOfConfig":"32"},{"size":649,"mtime":1606901944000,"results":"59","hashOfConfig":"32"},{"size":2134,"mtime":1606971041000,"results":"60","hashOfConfig":"32"},{"size":298,"mtime":1606901944000,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1hlpdo5",{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/reportWebVitals.js",[],["130","131"],"/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/components/Shipments/Shipments.js",["132"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport \"primeicons/primeicons.css\";\n\nimport \"primereact/resources/themes/saga-blue/theme.css\";\nimport \"primereact/resources/primereact.css\";\nimport \"primeflex/primeflex.css\";\nimport { ProgressSpinner } from \"primereact/progressspinner\";\nimport \"../../index.css\";\n\nimport { connect } from \"react-redux\";\nimport { fetchRegions, fetchTimes, addShipment } from \"../../redux/actions\";\n\nimport moment from \"moment\";\nimport classNames from \"classnames\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { Toast } from \"primereact/toast\";\nimport { Button } from \"primereact/button\";\nimport { MultiSelect } from \"primereact/multiselect\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { Toolbar } from \"primereact/toolbar\";\nimport { Dialog } from \"primereact/dialog\";\nimport { InputText } from \"primereact/inputtext\";\nimport { GMap } from \"primereact/gmap\";\nimport \"./cutom.css\";\n\nconst Shipments = ({\n  shipments,\n  statuses,\n  fetchRegions,\n  regions,\n  fetchTimes,\n  times,\n  addShipment,\n  user,\n}) => {\n  let emptyProduct = {\n    tracking_num: \"\",\n    receiver_name: \"\",\n    receiver_phone: \"\",\n  };\n\n  const [allshipments, setShipments] = useState(shipments || null);\n  const [shipmentDialog, setShipmentDialog] = useState(false);\n  const [shipmentDetailDialog, setShipmentDetailDialog] = useState(false);\n\n  const [shipment, setShipment] = useState(emptyProduct);\n  const [selectedProducts, setSelectedProducts] = useState(null);\n  const [selectedStatus, setSelectedStatus] = useState(null);\n  const [selectedRegion, setSelectedRegion] = useState(null);\n  const [selectedTime, setSelectedTime] = useState(null);\n\n  const [submitted, setSubmitted] = useState(false);\n  const [globalFilter, setGlobalFilter] = useState(null);\n  const toast = useRef(null);\n  const dt = useRef(null);\n  const statusesOptions = statuses?.map((status) => status.name);\n  const regionsOptions = regions?.map((region) => region.name);\n  const timeOptions = times?.map((time) => time.time);\n  const google = window.google;\n\n  const options = {\n    center: { lat: 24.7136, lng: 46.6753 },\n    zoom: 11,\n  };\n\n  const overlays = [\n    new google.maps.Marker({\n      position: {\n        lat: parseFloat(shipment.latitude),\n        lng: parseFloat(shipment.longitude),\n      },\n    }),\n  ];\n  useEffect(() => {\n    setShipments(shipments);\n    fetchRegions();\n    fetchTimes();\n  }, [shipments]);\n\n  if (!shipments)\n    return (\n      <div className=\"loader mt-5\">\n        <ProgressSpinner\n          style={{ width: \"200px\", height: \"200px\" }}\n          strokeWidth=\"8\"\n          fill=\"#EEEEEE\"\n          animationDuration=\".5s\"\n        />\n      </div>\n    );\n  const openNew = () => {\n    setShipment(emptyProduct);\n    setSubmitted(false);\n    setShipmentDialog(true);\n  };\n\n  const hideDialog = () => {\n    setSubmitted(false);\n    setShipmentDialog(false);\n  };\n  const hideDetailDialog = () => {\n    setShipmentDetailDialog(false);\n  };\n\n  const saveProduct = () => {\n    setSubmitted(true);\n\n    toast.current.show({\n      severity: \"success\",\n      summary: \"Successful\",\n      detail: \"Shipment Added\",\n      life: 3000,\n    });\n\n    addShipment({\n      tracking_num: shipment.tracking_num,\n      receiver_name: shipment.receiver_name,\n      receiver_phone: shipment.receiver_phone,\n    });\n    setShipmentDialog(false);\n    setShipment(emptyProduct);\n  };\n\n  const editProduct = (shipment) => {\n    setShipment({ ...shipment });\n    setShipmentDetailDialog(true);\n  };\n\n  const onInputChange = (e, name) => {\n    const val = (e.target && e.target.value) || \"\";\n    let _shipment = { ...shipment };\n    _shipment[`${name}`] = val;\n\n    setShipment(_shipment);\n  };\n\n  const leftToolbarTemplate = () => {\n    return (\n      <Button\n        label=\"New shipment\"\n        icon=\"pi pi-plus\"\n        className=\"p-button-success\"\n        onClick={openNew}\n      />\n    );\n  };\n\n  const statusBodyTemplate = (rowData) => {\n    return (\n      <span\n        className={classNames(\n          \"customer-badge\",\n          \"status-\" + rowData.status.name\n        )}\n      >\n        {rowData.status.name}\n      </span>\n    );\n  };\n  const renderStatusFilter = () => {\n    return (\n      <MultiSelect\n        value={selectedStatus}\n        options={statusesOptions}\n        onChange={onStatusFilterChange}\n        itemTemplate={statusItemTemplate}\n        filterBy={selectedStatus}\n        placeholder=\"Select a Status\"\n      />\n    );\n  };\n  const statusItemTemplate = (option) => {\n    return (\n      <span className={classNames(\"customer-badge\", \"status-\" + option)}>\n        {option}\n      </span>\n    );\n  };\n  const onStatusFilterChange = (event) => {\n    dt.current.filter(event.value, \"status.name\", \"in\");\n\n    setSelectedStatus(event.value);\n  };\n  const regionBodyTemplate = (rowData) => {\n    return (\n      <span className={`order-badge status-${rowData}`}>\n        {rowData.region?.name}\n      </span>\n    );\n  };\n  const renderRegionFilter = () => {\n    return (\n      <Dropdown\n        value={selectedRegion}\n        options={regionsOptions}\n        onChange={onRegionFilterChange}\n        itemTemplate={regionItemTemplate}\n        showClear\n        placeholder=\"Select a Region\"\n      />\n    );\n  };\n  const regionItemTemplate = (option) => {\n    return (\n      <span className={classNames(\"customer-badge\", \"status-\" + option)}>\n        {option}\n      </span>\n    );\n  };\n  const onRegionFilterChange = (event) => {\n    dt.current.filter(event.value, \"region.name\", \"equals\");\n\n    setSelectedRegion(event.value);\n  };\n\n  const journeyBodyTemplate = (rowData) => {\n    return (\n      <span className={`journy-badge status-${rowData.journey}`}>\n        {rowData.journey}\n      </span>\n    );\n  };\n  const trackinNumberBodyTemplate = (rowData) => {\n    return (\n      <span className={`customer-badge status-${rowData.tracking_num}`}>\n        {rowData.tracking_num}\n      </span>\n    );\n  };\n  const customerBodyTemplate = (rowData) => {\n    return (\n      <span className={`customer-badge status-${rowData.receiver_name}`}>\n        {rowData.receiver_name}\n      </span>\n    );\n  };\n\n  const dateBodyTemplate = (rowData) => {\n    return (\n      <span className={`customer-badge status-${rowData}`}>\n        {moment(rowData.date_added).format(\"YYYY-MM-DD\")}\n      </span>\n    );\n  };\n  const timeBodyTemplate = (rowData) => {\n    return (\n      <span className={`product-badge status-${rowData}`}>\n        {rowData.preferred_time?.time}\n      </span>\n    );\n  };\n  const renderTimeFilter = () => {\n    return (\n      <MultiSelect\n        value={selectedTime}\n        options={timeOptions}\n        onChange={onTimeFilterChange}\n        itemTemplate={timeItemTemplate}\n        filterBy={selectedTime}\n        placeholder=\"Select Time\"\n      />\n    );\n  };\n  const timeItemTemplate = (option) => {\n    return (\n      <span className={classNames(\"customer-badge\", \"status-\" + option)}>\n        {option}\n      </span>\n    );\n  };\n  const onTimeFilterChange = (event) => {\n    dt.current.filter(event.value, \"preferred_time.time\", \"in\");\n\n    setSelectedTime(event.value);\n  };\n\n  const actionBodyTemplate = (rowData) => {\n    return (\n      <Button\n        icon=\"pi pi-file-o \"\n        className=\"p-button-rounded p-button-success p-ml-2\"\n        onClick={() => editProduct(rowData)}\n      />\n    );\n  };\n\n  const header = (\n    <div className=\"table-header\">\n      <h5 className=\"p-m-0\">Manage Shipments</h5>\n      <span className=\"p-input-icon-left\">\n        <i className=\"pi pi-search\" />\n        <InputText\n          type=\"search\"\n          onInput={(e) => setGlobalFilter(e.target.value)}\n          placeholder=\"Search...\"\n        />\n      </span>\n    </div>\n  );\n  const shipmentDialogFooter = (\n    <>\n      <Button\n        label=\"Cancel\"\n        icon=\"pi pi-times\"\n        className=\"p-button-text\"\n        onClick={hideDialog}\n      />\n      <Button\n        label=\"Save\"\n        icon=\"pi pi-check\"\n        className=\"p-button-text\"\n        onClick={saveProduct}\n      />\n    </>\n  );\n\n  console.log(allshipments);\n\n  const statusFilterElement = renderStatusFilter();\n  const regionFilterElement = renderRegionFilter();\n  const timeFilterElement = renderTimeFilter();\n  if (!user) return <Redirect to=\"/login\" />;\n  return (\n    <div className=\"shipments ui-toolbar-group-left \">\n      <div className=\"datatable-crud-demo\">\n        <Toast ref={toast} />\n\n        <div className=\"card\">\n          <Toolbar className=\"p-mb-2\" right={leftToolbarTemplate}></Toolbar>\n\n          <DataTable\n            ref={dt}\n            value={allshipments}\n            selection={selectedProducts}\n            onSelectionChange={(e) => setSelectedProducts(e.value)}\n            dataKey=\"id\"\n            paginator\n            rows={25}\n            rowsPerPageOptions={[10, 25, 50]}\n            paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} Shipments\"\n            globalFilter={globalFilter}\n            header={header}\n          >\n            <Column\n              field=\"tracking_num\"\n              header=\"Tracking Number\"\n              body={trackinNumberBodyTemplate}\n            ></Column>\n            <Column\n              field=\"receiver_name\"\n              header=\"Customer Name\"\n              body={customerBodyTemplate}\n            ></Column>\n            {/* <Column field=\"receiver_phone\" header=\"Customer Phone\"  ></Column> */}\n            <Column\n              field=\"date_added\"\n              header=\"Delivery Date\"\n              body={dateBodyTemplate}\n              sortable\n            ></Column>\n            <Column\n              field=\"preferred_time.time\"\n              header=\"Preferred Time\"\n              body={timeBodyTemplate}\n              filter\n              filterElement={timeFilterElement}\n            ></Column>\n            <Column\n              field=\"journey\"\n              header=\"Journey\"\n              body={journeyBodyTemplate}\n              sortable\n            ></Column>\n            <Column\n              field=\"region.name\"\n              header=\"Region\"\n              body={regionBodyTemplate}\n              filter\n              filterElement={regionFilterElement}\n            ></Column>\n\n            <Column\n              field=\"status.name\"\n              header=\"Status\"\n              body={statusBodyTemplate}\n              filter\n              filterElement={statusFilterElement}\n            />\n            <Column header=\"Details\" body={actionBodyTemplate}></Column>\n          </DataTable>\n        </div>\n\n        <Dialog\n          visible={shipmentDialog}\n          style={{ width: \"1000px\" }}\n          header=\"Shipment Details\"\n          modal\n          className=\"p-fluid\"\n          footer={shipmentDialogFooter}\n          onHide={hideDialog}\n        >\n          <div className=\"p-field\">\n            <label htmlFor=\"id\">Tracking Number</label>\n            <InputText\n              id=\"id\"\n              value={shipment.tracking_num}\n              onChange={(e) => onInputChange(e, \"tracking_num\")}\n              required\n              autoFocus\n              className={classNames({\n                \"p-invalid\": submitted && !shipment.tracking_num,\n              })}\n            />\n            {submitted && !shipment.tracking_num && (\n              <small className=\"p-invalid\">Tracking Number is required.</small>\n            )}\n          </div>\n          <div className=\"p-field\">\n            <label htmlFor=\"name\">Customer name</label>\n            <InputText\n              id=\"name\"\n              value={shipment.receiver_name}\n              onChange={(e) => onInputChange(e, \"receiver_name\")}\n              required\n              autoFocus\n              className={classNames({\n                \"p-invalid\": submitted && !shipment.receiver_name,\n              })}\n            />\n            {submitted && !shipment.receiver_name && (\n              <small className=\"p-invalid\">Customer name is required.</small>\n            )}\n          </div>\n          <div className=\"p-field\">\n            <label htmlFor=\"name\">Customer phone</label>\n            <InputText\n              id=\"phone\"\n              value={shipment.receiver_phone}\n              onChange={(e) => onInputChange(e, \"receiver_phone\")}\n              required\n              autoFocus\n              className={classNames({\n                \"p-invalid\": submitted && !shipment.receiver_phone,\n              })}\n            />\n            {submitted && !shipment.receiver_phone && (\n              <small className=\"p-invalid\">Customer phone is required.</small>\n            )}\n          </div>\n        </Dialog>\n        <Dialog\n          visible={shipmentDetailDialog}\n          style={{ width: \"1000px\" }}\n          header={`${shipment.receiver_name}'s Shipment Details`}\n          modal\n          className=\"p-fluid\"\n          onHide={hideDetailDialog}\n        >\n          <table className=\"table table-bordered text-center \">\n            <thead>\n              <tr>\n                <th scope=\"col\">Tracking Number</th>\n                <th scope=\"col\">Customer name</th>\n                <th scope=\"col\">Customer Phone</th>\n                <th scope=\"col\">Delivery Date</th>\n                <th scope=\"col\">Added By</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>{shipment.tracking_num}</td>\n                <td>{shipment.receiver_name}</td>\n                <td>{shipment.receiver_phone}</td>\n                <td>{moment(shipment.date_added).format(\"YYYY-MM-DD\")}</td>\n                <td>{shipment.added_by?.username}</td>\n              </tr>\n            </tbody>\n          </table>\n\n          <div className=\"p-field\">\n            <label htmlFor=\"name\" className=\"text-primary\">\n              Customer Location\n            </label>\n            <GMap\n              options={options}\n              style={{ width: \"100%\", minHeight: \"320px\" }}\n              overlays={overlays}\n            />\n          </div>\n          <div className=\"p-field\">\n            <button\n              className=\"btn rs-btn-primary\"\n              onClick={() => window.open(shipment.location)}\n            >\n              Cutomer's Location on Google Maps\n            </button>\n          </div>\n        </Dialog>\n      </div>\n    </div>\n  );\n};\nconst mapStateToProps = ({ shipments, statuses, regions, times, user }) => ({\n  shipments,\n  statuses,\n  regions,\n  times,\n  user,\n});\nconst mapDispatchToProps = {\n  fetchRegions,\n  fetchTimes,\n  addShipment,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Shipments);\n",["133","134"],"/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/redux/index.js",[],"/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/components/Sidebar/SidebarData.js",[],"/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/components/Driver/DriversList.js",[],"/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/redux/actions/region.js",[],"/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/redux/actions/shipment.js",[],["135","136"],"/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/redux/reducers/time.js",[],"/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/redux/reducers/shipment.js",[],"/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/redux/actions/actionTypes.js",[],"/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/index.js",[],"/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/components/HomePage/Home.js",[],"/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/components/Journey/JourneyList.js",["137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport \"primeicons/primeicons.css\";\n\nimport \"primereact/resources/themes/saga-blue/theme.css\";\nimport \"primereact/resources/primereact.css\";\nimport \"primeflex/primeflex.css\";\nimport { ProgressSpinner } from \"primereact/progressspinner\";\nimport { ProgressBar } from \"primereact/progressbar\";\nimport \"../../index.css\";\n\nimport moment from \"moment\";\nimport classNames from \"classnames\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { Toast } from \"primereact/toast\";\nimport { Button } from \"primereact/button\";\nimport { InputSwitch } from \"primereact/inputswitch\";\nimport { MultiSelect } from \"primereact/multiselect\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { Toolbar } from \"primereact/toolbar\";\n\nimport { InputText } from \"primereact/inputtext\";\n\nimport \"../Shipments/cutom.css\";\nimport DriverModal from \"../Driver/DriverModal\";\nconst JourneyList = ({ journeys, user }) => {\n  const [allJourneys, setJourneys] = useState(journeys || null);\n\n  const [journey, setJourney] = useState(null);\n  const [selectedJourneys, setSelectedJourneys] = useState(null);\n  const [selectedStatus, setSelectedStatus] = useState(null);\n  const [selectedRegion, setSelectedRegion] = useState(null);\n  const [selectedTime, setSelectedTime] = useState(null);\n  const [openModal, setOpenModal] = useState(false);\n  const [journeyToAssign, setJourneyToAssign] = useState(null);\n  const [checked, setChecked] = useState(false);\n  const [globalFilter, setGlobalFilter] = useState(null);\n  const toast = useRef(null);\n  const dt = useRef(null);\n  //   const statusesOptions = statuses?.map((status) => status.name);\n  //   const regionsOptions = regions?.map((region) => region.name);\n  //   const timeOptions = times?.map((time) => time.time);\n\n  useEffect(() => {\n    setJourneys(journeys);\n    // fetchRegions();\n    // fetchTimes();\n  }, [journeys]);\n\n  useEffect(() => {\n    if (checked) {\n      const filtered = allJourneys.filter(\n        (journey) => journey.is_completed === false\n      );\n      setJourneys(filtered);\n    } else {\n      setJourneys(journeys);\n    }\n  }, [checked]);\n\n  const handleAssignClick = (rowData) => {\n    setJourneyToAssign(rowData);\n    setOpenModal(true);\n  };\n\n  if (!journeys)\n    return (\n      <div className=\"loader mt-5\">\n        <ProgressSpinner\n          style={{ width: \"200px\", height: \"200px\" }}\n          strokeWidth=\"8\"\n          fill=\"#EEEEEE\"\n          animationDuration=\".5s\"\n        />\n      </div>\n    );\n\n  const leftToolbarTemplate = () => {\n    return (\n      <Link to=\"/journeys/create/\">\n        <Button\n          label=\"New journey\"\n          icon=\"pi pi-plus\"\n          className=\"p-button-success\"\n        />\n      </Link>\n    );\n  };\n\n  const statusBodyTemplate = (rowData) => {\n    return (\n      <>\n        {rowData.is_completed === false ? (\n          <span className={classNames(\"customer-badge\", \"status-Pending\")}>\n            Active\n          </span>\n        ) : (\n          <span className={classNames(\"customer-badge\", \"status-Delivered\")}>\n            completed\n          </span>\n        )}\n      </>\n    );\n  };\n  //   const renderStatusFilter = () => {\n  //     return (\n  //       <MultiSelect\n  //         value={selectedStatus}\n  //         options={statusesOptions}\n  //         onChange={onStatusFilterChange}\n  //         itemTemplate={statusItemTemplate}\n  //         filterBy={selectedStatus}\n  //         placeholder=\"Select a Status\"\n  //       />\n  //     );\n  //   };\n  const statusItemTemplate = (option) => {\n    return (\n      <span className={classNames(\"customer-badge\", \"status-\" + option)}>\n        {option}\n      </span>\n    );\n  };\n  const onStatusFilterChange = (event) => {\n    dt.current.filter(event.value, \"status.name\", \"in\");\n\n    setSelectedStatus(event.value);\n  };\n  const regionBodyTemplate = (rowData) => {\n    return (\n      <span className={`order-badge status-${rowData}`}>\n        {rowData.region?.name}\n      </span>\n    );\n  };\n  //   const renderRegionFilter = () => {\n  //     return (\n  //       <Dropdown\n  //         value={selectedRegion}\n  //         options={regionsOptions}\n  //         onChange={onRegionFilterChange}\n  //         itemTemplate={regionItemTemplate}\n  //         showClear\n  //         placeholder=\"Select a Region\"\n  //       />\n  //     );\n  //   };\n  const regionItemTemplate = (option) => {\n    return (\n      <span className={classNames(\"customer-badge\", \"status-\" + option)}>\n        {option}\n      </span>\n    );\n  };\n  const onRegionFilterChange = (event) => {\n    dt.current.filter(event.value, \"region.name\", \"equals\");\n\n    setSelectedRegion(event.value);\n  };\n\n  const journeyIdBodyTemplate = (rowData) => {\n    return (\n      <span className={`customer-badge status-${rowData.id}`}>\n        {rowData.id}\n      </span>\n    );\n  };\n  const y = (rowData) => {\n    return (\n      <span className={`customer-badge status-${rowData.tracking_num}`}>\n        {rowData.tracking_num}\n      </span>\n    );\n  };\n  const driverBodyTemplate = (rowData) => {\n    return (\n      <>\n        {rowData.driver?.user.first_name ? (\n          <span className={`customer-badge status-${rowData.driver}`}>\n            {`${rowData.driver?.user.first_name} ${rowData.driver?.user.last_name}`}\n          </span>\n        ) : (\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => handleAssignClick(rowData)}\n          >\n            Assign Driver\n          </button>\n        )}\n      </>\n    );\n  };\n\n  const dateBodyTemplate = (rowData) => {\n    return (\n      <span className={`customer-badge status-${rowData}`}>\n        {moment(rowData.date).format(\"YYYY-MM-DD\")}\n      </span>\n    );\n  };\n  const distanceBodyTemplate = (rowData) => {\n    return (\n      <span className={`customer-badge status-${rowData}`}>\n        {rowData.distance_traveled}\n      </span>\n    );\n  };\n  const timeBodyTemplate = (rowData) => {\n    return (\n      <span className={`customer-badge status-${rowData}`}>\n        {rowData.time_traveled}\n      </span>\n    );\n  };\n  //   const renderTimeFilter = () => {\n  //     return (\n  //       <MultiSelect\n  //         value={selectedTime}\n  //         options={timeOptions}\n  //         onChange={onTimeFilterChange}\n  //         itemTemplate={timeItemTemplate}\n  //         filterBy={selectedTime}\n  //         placeholder=\"Select Time\"\n  //       />\n  //     );\n  //   };\n  const timeItemTemplate = (option) => {\n    return (\n      <span className={classNames(\"customer-badge\", \"status-\" + option)}>\n        {option}\n      </span>\n    );\n  };\n  const onTimeFilterChange = (event) => {\n    dt.current.filter(event.value, \"preferred_time.time\", \"in\");\n\n    setSelectedTime(event.value);\n  };\n  const displayValueTemplate = (value) => {\n    return (\n      <React.Fragment>\n        {value}/<b>10</b>\n      </React.Fragment>\n    );\n  };\n\n  const actionBodyTemplate = (rowData) => {\n    let counter = 0;\n    const len = rowData?.packages.length;\n\n    rowData?.packages.forEach((p) => {\n      if (p.status?.name === \"Delivered\") {\n        counter++;\n      }\n    });\n    const random = Math.floor(Math.random() * (25 - 5) ) + 5\n\n    return (\n      <>\n        {rowData.is_completed === true ? (\n          <div className=\"progress\">\n            <div\n              className=\"progress-bar\"\n              role=\"progressbar\"\n              style={{ width: `100%` }}\n              aria-valuenow=\"0\"\n              aria-valuemin=\"0\"\n              aria-valuemax={len}\n            >\n              {random}/{random}\n            </div>\n          </div>\n        ) : (\n          <div className=\"progress\">\n            <div\n              className=\"progress-bar\"\n              role=\"progressbar\"\n              style={{ width: `${len ===0 ? ((random-4)/random*100) : (counter / len) * 100}%` }}\n              aria-valuenow=\"0\"\n              aria-valuemin=\"0\"\n              aria-valuemax={len}\n            >\n              {random-4}/{len === 0 && random}\n            </div>\n          </div>\n        )}\n      </>\n    );\n  };\n  const handleClick = (e) => {\n    setChecked(e.value);\n  };\n\n  const header = (\n    <>\n      <div className=\"table-header\">\n        <h4 className=\"p-m-0\">Journeys List</h4>\n\n        <span className=\"p-input-icon-left\">\n          <i className=\"pi pi-search\" />\n          <InputText\n            type=\"search\"\n            onInput={(e) => setGlobalFilter(e.target.value)}\n            placeholder=\"Search...\"\n          />\n        </span>\n      </div>\n\n      <div className=\" d-flex align-self-center \">\n        <h5 className=\"align-self-baseline mr-3\">Only Active Journeys?</h5>\n        <InputSwitch checked={checked} onChange={handleClick} />\n      </div>\n    </>\n  );\n\n  console.log(allJourneys);\n\n  //   const statusFilterElement = renderStatusFilter();\n  //   const regionFilterElement = renderRegionFilter();\n  //   const timeFilterElement = renderTimeFilter();\n  if (!user) return <Redirect to=\"/login\" />;\n  return (\n    <div className=\"journeyslist ui-toolbar-group-left \">\n      <DriverModal\n        openModal={openModal}\n        setOpenModal={setOpenModal}\n        journey={journeyToAssign}\n        key={journeyToAssign?.id}\n        modalHeader={`Assign a driver to journey`}\n      />\n      <div className=\"datatable-crud-demo\">\n        <Toast ref={toast} />\n\n        <div className=\"card\">\n          <Toolbar className=\"p-mb-2\" right={leftToolbarTemplate}></Toolbar>\n\n          <DataTable\n            ref={dt}\n            value={allJourneys}\n            selection={selectedJourneys}\n            onSelectionChange={(e) => setSelectedJourneys(e.value)}\n            dataKey=\"id\"\n            paginator\n            rows={25}\n            rowsPerPageOptions={[10, 25, 50]}\n            paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} Journeys\"\n            globalFilter={globalFilter}\n            header={header}\n          >\n            <Column\n              field=\"id\"\n              header=\"Journey Id\"\n              body={journeyIdBodyTemplate}\n            ></Column>\n            <Column\n              field=\"driver.user.last_name\"\n              header=\"Driver\"\n              body={driverBodyTemplate}\n            ></Column>\n            {/* <Column field=\"receiver_phone\" header=\"Customer Phone\"  ></Column> */}\n            <Column\n              field=\"date\"\n              header=\"Delivery Date\"\n              body={dateBodyTemplate}\n              sortable\n            ></Column>\n            <Column\n              field=\"distance_traveled\"\n              header=\"Distance Traveled\"\n              body={distanceBodyTemplate}\n              //   filter\n              //   filterElement={timeFilterElement}\n            ></Column>\n            <Column\n              field=\"time_traveled\"\n              header=\"Time Traveled\"\n              body={timeBodyTemplate}\n            ></Column>\n            <Column\n              field=\"status\"\n              header=\"Status\"\n              body={statusBodyTemplate}\n              //   filter\n              //   filterElement={statusFilterElement}\n            />\n            {/*<Column\n              field=\"region.name\"\n              header=\"Region\"\n              body={regionBodyTemplate}\n              //   filter\n              //   filterElement={regionFilterElement}\n            ></Column>\n\n            <Column\n              field=\"status.name\"\n              header=\"Status\"\n              body={statusBodyTemplate}\n              //   filter\n              //   filterElement={statusFilterElement}\n            /> */}\n\n            <Column header=\"Progress\" body={actionBodyTemplate}></Column>\n          </DataTable>\n        </div>\n      </div>\n    </div>\n  );\n};\nconst mapStateToProps = ({ journeys, user }) => ({\n  journeys,\n  user,\n});\n\nexport default connect(mapStateToProps)(JourneyList);\n","/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/redux/actions/journey.js",[],"/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/redux/reducers/driver.js",[],"/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/redux/actions/auth.js",[],"/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/components/Journey/JourneyCreate.js",["155","156","157"],"/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/components/Journey/JourneyMapCreate.js",["158","159"],"import React, { useEffect } from \"react\";\nimport { GoogleMap, useLoadScript, Marker } from \"@react-google-maps/api\";\nimport { connect } from \"react-redux\";\nimport \"./JourneyMapCreate.css\";\n\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  height: \"100vh\",\n  width: \"100%\",\n};\nconst center = {\n  lat: 24.711988,\n  lng: 46.663406,\n};\nconst JourneyMap = ({\n  shipments,\n  selected,\n  setSelected,\n  travelTime,\n  setTravelTime,\n  previousLength,\n  setPreviousLength,\n}) => {\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    libraries,\n  });\n\n  useEffect(() => {\n    try {\n      if (selected.length < previousLength) {\n        setPreviousLength(selected.length);\n        setTravelTime(0);\n        if (selected.length > 1) {\n          let newTravelTime = 0;\n          for (let i = 1; i < selected.length; i++) {\n            let originShipment = selected[i - 1];\n            let destinationShipment = selected[i];\n            let origin = new window.google.maps.LatLng(\n              Number(originShipment.latitude),\n              Number(originShipment.longitude)\n            );\n            let destination = new window.google.maps.LatLng(\n              Number(destinationShipment.latitude),\n              Number(destinationShipment.longitude)\n            );\n            const callback = (response) => {\n              let travel =\n                Math.ceil(response.rows[0].elements[0].duration.value / 60) + 5;\n              newTravelTime += travel;\n              setTravelTime(newTravelTime);\n            };\n            let service = new window.google.maps.DistanceMatrixService();\n            service.getDistanceMatrix(\n              {\n                origins: [origin],\n                destinations: [destination],\n                travelMode: \"DRIVING\",\n              },\n              callback\n            );\n          }\n        }\n      } else {\n        setPreviousLength(selected.length);\n        if (selected.length > 1) {\n          let originShipment = selected[selected.length - 2];\n          let destinationShipment = selected[selected.length - 1];\n          let origin = new window.google.maps.LatLng(\n            Number(originShipment.latitude),\n            Number(originShipment.longitude)\n          );\n          let destination = new window.google.maps.LatLng(\n            Number(destinationShipment.latitude),\n            Number(destinationShipment.longitude)\n          );\n          const callback = (response) => {\n            let travel =\n              Math.ceil(response.rows[0].elements[0].duration.value / 60) + 5;\n            setTravelTime(travelTime + travel);\n          };\n          let service = new window.google.maps.DistanceMatrixService();\n          service.getDistanceMatrix(\n            {\n              origins: [origin],\n              destinations: [destination],\n              travelMode: \"DRIVING\",\n            },\n            callback\n          );\n        }\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [selected]);\n\n  if (loadError) return \"Error\";\n  if (!isLoaded) return \"Loading...\";\n  if (!shipments) return <h1> LOADING...</h1>;\n\n  const markers = shipments?.map((shipment) => (\n    <Marker\n      key={shipment.id}\n      position={{\n        lat: Number(shipment.latitude),\n        lng: Number(shipment.longitude),\n      }}\n      onClick={() => {\n        setSelected(\n          selected.some((item) => item.id === shipment.id)\n            ? selected.filter((pin) => pin.id !== shipment.id)\n            : [...selected, shipment]\n        );\n      }}\n      icon={\n        selected.some((item) => item.id === shipment.id)\n          ? {\n              url: `http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=${\n                selected.findIndex((obj) => obj.id === shipment.id) + 1\n              }|9797ff|000000`,\n            }\n          : {\n              url: `http://maps.google.com/mapfiles/ms/icons/red-dot.png`,\n            }\n      }\n    />\n  ));\n\n  return (\n    // <div className=\"d-flex justify-content-center\">\n    <>\n      {travelTime > 0 && travelTime < 60 && (\n        <h4 className=\"mapHeader bg-light p-2\">Travel Time: {travelTime}</h4>\n      )}\n      {travelTime > 60 && (\n        <h4 className=\"mapHeader bg-light p-2 text-danger\">\n          Travel Time: {travelTime}\n        </h4>\n      )}\n      <GoogleMap\n        id=\"map\"\n        mapContainerStyle={mapContainerStyle}\n        zoom={11.5}\n        center={center}\n      >\n        {markers}\n      </GoogleMap>\n    </>\n    // </div>\n  );\n};\n\nconst mapStateToProps = ({ journeys }) => ({\n  journeys,\n});\n\nexport default connect(mapStateToProps)(JourneyMap);\n","/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/components/Shipments/ShipmentsMap.js",[],"/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/components/Authentication/Login.js",[],"/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/redux/reducers/index.js",[],"/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/redux/reducers/user.js",[],"/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/redux/actions/driver.js",[],"/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/redux/actions/instance.js",[],"/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/components/Sidebar/Navbar.js",["160","161"],"import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../redux/actions\";\n\nimport * as FaIcons from \"react-icons/fa\";\nimport * as AiIcons from \"react-icons/ai\";\n\nimport { NavLink } from \"react-router-dom\";\nimport { SidebarData } from \"./SidebarData\";\nimport \"./Navbar.css\";\nimport { IconContext } from \"react-icons\";\n\nfunction Navbar({ user, logout }) {\n  const [sidebar, setSidebar] = useState(false);\n\n  const showSidebar = () => setSidebar(!sidebar);\n\n  return (\n    <>\n      <IconContext.Provider value={{ color: \"#3f4f83\" }}>\n        {/* <div className=\"navbar\">\n          <NavLink to=\"#\" className=\"menu-bars\">\n            <FaIcons.FaBars onClick={showSidebar} />\n          </NavLink>\n        </div> */}\n        <nav className={\"nav-menu active\"}>\n          <ul className=\"nav-menu-items\">\n            <li className=\"navbar-toggle\">\n              <h2 className=\"ml-5\">Pinpoint</h2>\n            </li>\n\n            {user ? (\n              <>\n                {\" \"}\n                <li className=\"nav-text\">\n                  <NavLink to=\"/\" exact activeClassName=\"active\">\n                    <AiIcons.AiFillHome />\n                    <span className=\"span-space\">Home</span>\n                  </NavLink>\n                </li>\n                <li className=\"nav-text\">\n                  <NavLink to=\"/shipments/\" exact activeClassName=\"active\">\n                    <FaIcons.FaTruck />\n                    <span className=\"span-space\">Shipments</span>\n                  </NavLink>\n                </li>\n                <li className=\"nav-text\">\n                  <NavLink to=\"/journeys/list/\" exact activeClassName=\"active\">\n                    <FaIcons.FaRoute />\n                    <span className=\"span-space\">Journeys</span>\n                  </NavLink>\n                </li>\n                <li className=\"nav-text\">\n                  <NavLink to=\"/map/\" exact activeClassName=\"active\">\n                    <FaIcons.FaMapMarkedAlt />\n                    <span className=\"span-space\">Shipments Map</span>\n                  </NavLink>\n                </li>\n                <button className=\"btn btn-lg btn-info   \" onClick={logout}>\n                  Logout\n                </button>\n              </>\n            ) : (\n              <>\n                <li className=\"nav-text\">\n                  <NavLink to=\"/\" exact activeClassName=\"active\">\n                    <AiIcons.AiFillHome />\n                    <span className=\"span-space\">Home</span>\n                  </NavLink>\n                </li>\n                <NavLink to=\"/login\">\n                  {\" \"}\n                  <button className=\"btn  btn-info  btn-lg\">Login</button>\n                </NavLink>\n              </>\n            )}\n          </ul>\n        </nav>\n      </IconContext.Provider>\n    </>\n  );\n}\nconst mapStateToProps = ({ user }) => ({ user });\nconst mapDispatchToProps = (dispatch) => ({\n  logout: () => dispatch(logout()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\n","/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/components/Driver/DriverModal.js",[],"/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/redux/actions/status.js",[],"/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/redux/reducers/journey.js",[],"/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/components/Journey/CardsSection.js",["162"],"import React from \"react\";\nimport { Text, initializeIcons } from \"@fluentui/react\";\nimport { Card } from \"@uifabric/react-cards\";\nimport \"office-ui-fabric-react/dist/css/fabric.css\";\n\nconst container = {\n  display: \"flex\",\n  justifyContent: \"center\",\n  margin: \"1vh 0\",\n};\n\nconst icon = {\n  fontSize: 24,\n  padding: 15,\n  verticalAlign: \"middle\",\n  paddingLeft: 0,\n  color: \"#0078d4\",\n};\n\nconst styles = {\n  cardStyles: {\n    root: {\n      background: \"white\",\n      padding: 20,\n      borderLeft: \"5px solid #0078d4\",\n      width: 300,\n      maxWidth: 400,\n      margin: \"auto\",\n    },\n  },\n  header: {\n    root: {\n      fontSize: 20,\n      fontWeight: \"bold\",\n    },\n  },\n  amount: {\n    root: {\n      fontSize: 26,\n      paddingBottom: 20,\n      paddingTop: 30,\n    },\n  },\n  percentage: {\n    root: {\n      fontSize: 16,\n      fontWeight: \"bold\",\n      color: \"#0078d4\",\n    },\n  },\n};\n\nconst cards = [\n  {\n    title: \"Current Balance\",\n    amount: \"$21 837\",\n    icon: \"CaretRightOutline\",\n    percentage: \"2.3\",\n  },\n  {\n    title: \"Current Expanses\",\n    amount: \"$10 927\",\n    icon: \"PaymentCard\",\n    percentage: \"0.3\",\n  },\n  {\n    title: \"Current Income\",\n    amount: \"$15 093\",\n    icon: \"Savings\",\n    percentage: \"1.3\",\n  },\n];\n\nconst CardsSection = ({ shipment }) => {\n  console.log(shipment);\n  initializeIcons();\n  return (\n    <div style={container}>\n      <div className=\"s-Grid-col ms-sm3 ms-xl3\">\n        <Card styles={styles.cardStyles}>\n          <Card.Section>\n            <Card.Item>\n              <i\n                style={icon}\n                className=\"ms-Icon ms-Icon--caretRightOutline\"\n                aria-hidden=\"true\"\n              ></i>\n              <Text styles={styles.header}>{shipment.receiver_name}</Text>\n            </Card.Item>\n            <Card.Item>\n              <Text styles={styles.amount}>{shipment.preferred_time.time}</Text>\n            </Card.Item>\n            <Card.Item>\n              <Text styles={styles.percentage}>{shipment.tracking_num}</Text>\n            </Card.Item>\n          </Card.Section>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default CardsSection;\n","/Users/Heba/Desktop/CODED/final-capstone/pinpoint-admin/src/redux/reducers/region.js",[],{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":80,"column":6,"nodeType":"169","endLine":80,"endColumn":17,"suggestions":"170"},{"ruleId":"163","replacedBy":"171"},{"ruleId":"165","replacedBy":"172"},{"ruleId":"163","replacedBy":"173"},{"ruleId":"165","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":10,"column":10,"nodeType":"177","messageId":"178","endLine":10,"endColumn":21},{"ruleId":"175","severity":1,"message":"179","line":20,"column":10,"nodeType":"177","messageId":"178","endLine":20,"endColumn":21},{"ruleId":"175","severity":1,"message":"180","line":21,"column":10,"nodeType":"177","messageId":"178","endLine":21,"endColumn":18},{"ruleId":"175","severity":1,"message":"181","line":31,"column":10,"nodeType":"177","messageId":"178","endLine":31,"endColumn":17},{"ruleId":"175","severity":1,"message":"182","line":31,"column":19,"nodeType":"177","messageId":"178","endLine":31,"endColumn":29},{"ruleId":"175","severity":1,"message":"183","line":33,"column":10,"nodeType":"177","messageId":"178","endLine":33,"endColumn":24},{"ruleId":"175","severity":1,"message":"184","line":34,"column":10,"nodeType":"177","messageId":"178","endLine":34,"endColumn":24},{"ruleId":"175","severity":1,"message":"185","line":35,"column":10,"nodeType":"177","messageId":"178","endLine":35,"endColumn":22},{"ruleId":"167","severity":1,"message":"186","line":61,"column":6,"nodeType":"169","endLine":61,"endColumn":15,"suggestions":"187"},{"ruleId":"175","severity":1,"message":"188","line":119,"column":9,"nodeType":"177","messageId":"178","endLine":119,"endColumn":27},{"ruleId":"175","severity":1,"message":"189","line":126,"column":9,"nodeType":"177","messageId":"178","endLine":126,"endColumn":29},{"ruleId":"175","severity":1,"message":"190","line":131,"column":9,"nodeType":"177","messageId":"178","endLine":131,"endColumn":27},{"ruleId":"175","severity":1,"message":"191","line":150,"column":9,"nodeType":"177","messageId":"178","endLine":150,"endColumn":27},{"ruleId":"175","severity":1,"message":"192","line":157,"column":9,"nodeType":"177","messageId":"178","endLine":157,"endColumn":29},{"ruleId":"175","severity":1,"message":"193","line":170,"column":9,"nodeType":"177","messageId":"178","endLine":170,"endColumn":10},{"ruleId":"175","severity":1,"message":"194","line":229,"column":9,"nodeType":"177","messageId":"178","endLine":229,"endColumn":25},{"ruleId":"175","severity":1,"message":"195","line":236,"column":9,"nodeType":"177","messageId":"178","endLine":236,"endColumn":27},{"ruleId":"175","severity":1,"message":"196","line":241,"column":9,"nodeType":"177","messageId":"178","endLine":241,"endColumn":29},{"ruleId":"175","severity":1,"message":"197","line":4,"column":10,"nodeType":"177","messageId":"178","endLine":4,"endColumn":19},{"ruleId":"175","severity":1,"message":"198","line":5,"column":10,"nodeType":"177","messageId":"178","endLine":5,"endColumn":16},{"ruleId":"175","severity":1,"message":"199","line":55,"column":9,"nodeType":"177","messageId":"178","endLine":55,"endColumn":25},{"ruleId":"200","severity":1,"message":"201","line":47,"column":30,"nodeType":"202","messageId":"203","endLine":52,"endColumn":14},{"ruleId":"167","severity":1,"message":"204","line":96,"column":6,"nodeType":"169","endLine":96,"endColumn":16,"suggestions":"205"},{"ruleId":"175","severity":1,"message":"206","line":9,"column":10,"nodeType":"177","messageId":"178","endLine":9,"endColumn":21},{"ruleId":"175","severity":1,"message":"207","line":16,"column":9,"nodeType":"177","messageId":"178","endLine":16,"endColumn":20},{"ruleId":"175","severity":1,"message":"208","line":53,"column":7,"nodeType":"177","messageId":"178","endLine":53,"endColumn":12},"no-native-reassign",["209"],"no-negated-in-lhs",["210"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchRegions' and 'fetchTimes'. Either include them or remove the dependency array. If 'fetchRegions' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["211"],["209"],["210"],["209"],["210"],"no-unused-vars","'ProgressBar' is defined but never used.","Identifier","unusedVar","'MultiSelect' is defined but never used.","'Dropdown' is defined but never used.","'journey' is assigned a value but never used.","'setJourney' is assigned a value but never used.","'selectedStatus' is assigned a value but never used.","'selectedRegion' is assigned a value but never used.","'selectedTime' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'allJourneys' and 'journeys'. Either include them or remove the dependency array. If 'setJourneys' needs the current value of 'journeys', you can also switch to useReducer instead of useState and read 'journeys' in the reducer.",["212"],"'statusItemTemplate' is assigned a value but never used.","'onStatusFilterChange' is assigned a value but never used.","'regionBodyTemplate' is assigned a value but never used.","'regionItemTemplate' is assigned a value but never used.","'onRegionFilterChange' is assigned a value but never used.","'y' is assigned a value but never used.","'timeItemTemplate' is assigned a value but never used.","'onTimeFilterChange' is assigned a value but never used.","'displayValueTemplate' is assigned a value but never used.","'DataTable' is defined but never used.","'Column' is defined but never used.","'dateBodyTemplate' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'newTravelTime', 'newTravelTime'.","ArrowFunctionExpression","unsafeRefs","React Hook useEffect has missing dependencies: 'previousLength', 'setPreviousLength', 'setTravelTime', and 'travelTime'. Either include them or remove the dependency array. If 'setPreviousLength' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["213"],"'SidebarData' is defined but never used.","'showSidebar' is assigned a value but never used.","'cards' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},"Update the dependencies array to be: [fetchRegions, fetchTimes, shipments]",{"range":"220","text":"221"},"Update the dependencies array to be: [allJourneys, checked, journeys]",{"range":"222","text":"223"},"Update the dependencies array to be: [previousLength, selected, setPreviousLength, setTravelTime, travelTime]",{"range":"224","text":"225"},[2517,2528],"[fetchRegions, fetchTimes, shipments]",[2275,2284],"[allJourneys, checked, journeys]",[3024,3034],"[previousLength, selected, setPreviousLength, setTravelTime, travelTime]"]